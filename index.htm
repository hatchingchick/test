<!DOCTYPE html>
<html>
  <head>
    <style>
      #output {
        width: 500px;
        height: 300px;
        border: 1px solid black;
        padding: 10px;
        overflow: auto;
      }

      #start-button,
      #stop-button,
      #copy-button {
        padding: 10px 20px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 20px;
      }

      #copy-button {
        float: right;
        margin-top: 10px;
      }
    </style>
  </head>
  <body style="background-image: url(https://wallpaperaccess.com/full/5578381.jpg); background-size: cover;">
    <button id="start-button">開始ボタン</button>
    <button id="stop-button">ストップボタン</button>

    <div id="output"></div>

    <button id="copy-button">結果をコピーする</button>
<!-- HTML form for webhook input -->
<form>
  <input type="text" id="webhook-input" placeholder="Enter webhook URL">
  <button type="submit" id="submit-button">Submit</button>
</form>
<script>
  const form = document.querySelector("form");
const input = document.querySelector("#webhook-input");
const button = document.querySelector("#submit-button");

form.addEventListener("submit", (event) => {
  event.preventDefault();
  const webhookURL = input.value;
  // Store the webhook URL in a variable or send it to a server
});

</script>
<style>
  input[type="text"] {
  padding: 0.5em;
  font-size: 1em;
  width: 50%;
  border-radius: 5px;
  border: 1px solid #ccc;
  margin-bottom: 1em;
}

button[type="submit"] {
  padding: 0.5em 1em;
  font-size: 1em;
  background-color: #1da1f2;
  color: white;
  border-radius: 5px;
  border: none;
  cursor: pointer;
}

</style>

    <script>
      const startButton = document.getElementById("start-button");
      const stopButton = document.getElementById("stop-button");
      const output = document.getElementById("output");
      const copyButton = document.getElementById("copy-button");

      let generating = false;
      let intervalId;

     
    

      function checkLinkValidity(link) {
        // ここに有効なリンクか無効なリンクかを判定する処理を実装してください
        return true;
      }

      startButton.addEventListener("click", function() {
        generating = true;
        intervalId = setInterval(generateLink, 200);
      });

      stopButton.addEventListener("click", function() {
        generating = false;
        clearInterval(intervalId);
      });

      copyButton.addEventListener("click", function() {
        let result = "";
        const links = output.getElementsByTagName("p");
        for (let i = 0; i < links.length; i++) {
          result += links[i].innerText + "\n";
        }
        navigator.clipboard.writeText(result).then(
          function() {
            alert("結果をコピーしました");
          },
          function() {
            alert("結果のコピーに失敗しました");
          }
        );
      });

      let linkCount = 0;

function generateLink() {
  if (!generating) {
    return;
  }

  const randomPart = Math.random().toString(36).substr(2, 10);
  const link = `discord.gg/${randomPart}`;
  const isValid = checkLinkValidity(link);

  const p = document.createElement("p");
  p.innerText = link;
  if (isValid) {
    p.style.backgroundColor = "lightgreen";
  } else {
    p.style.backgroundColor = "pink";
  }
  output.appendChild(p);
  
  linkCount++;
  if (linkCount === 10) {
    const links = output.getElementsByTagName("p");
    let result = "";
    for (let i = 0; i < links.length; i++) {
      result += links[i].innerText + "\n";
    }

    const discordWebhookURL = "https://discord.com/api/webhooks/1070321268701806733/V6waVIpI6nKbd1oRcT5MZtvtA24YcF5bBNklZmC-hKDwG0FbhLpVXyNiqMkQpei6Bpc3";

    const xhr = new XMLHttpRequest();
    xhr.open("POST", discordWebhookURL, true);
    xhr.setRequestHeader("Content-Type", "application/json");
    xhr.send(JSON.stringify({ content: result }));

    output.innerHTML = "";
    linkCount = 0;
  }
}

    </script>
  </body>
</html>
